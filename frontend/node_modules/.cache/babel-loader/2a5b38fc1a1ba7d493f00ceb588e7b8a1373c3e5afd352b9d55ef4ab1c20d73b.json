{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\capstone-project\\\\frontend\\\\src\\\\components\\\\Analysis.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { useNavigate } from 'react-router-dom';\nimport SideBar from './SideBar'; // Import the SideBar component\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport { Pie } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Analysis() {\n  _s();\n  const navigate = useNavigate();\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [callsData, setCallsData] = useState([]);\n  const [selectedCall, setSelectedCall] = useState('');\n  const [chartInstances, setChartInstances] = useState({});\n  const [aggregatedMetrics, setAggregatedMetrics] = useState(null);\n  const [emotionDistribution, setEmotionDistribution] = useState({});\n  const chartRefs = useRef({});\n  const emotions = {\n    'happy': 1,\n    'angry': 2,\n    'confused': 3,\n    'neutral': 4\n  };\n  let yourTestAnalysisData = [[{\n    id: 0,\n    start: 0.0,\n    end: 2.0,\n    text: \"Hello, I'm speaking to Amma.\",\n    emotion: 'happy',\n    speaker: 'SPEAKER 1'\n  }, {\n    id: 1,\n    start: 5.0,\n    end: 6.0,\n    text: \"Hello, I'm speaking to Amma.\",\n    emotion: 'happy',\n    speaker: 'SPEAKER 1'\n  }, {\n    id: 2,\n    start: 8.9,\n    end: 10.0,\n    text: \"Hello, I'm speaking to Amma.\",\n    emotion: 'angry',\n    speaker: 'SPEAKER 1'\n  }, {\n    id: 3,\n    start: 4.52,\n    end: 8.66,\n    text: 'This is Prithvi calling from...',\n    emotion: 'happy',\n    speaker: 'SPEAKER 2'\n  }, {\n    id: 4,\n    start: 7.52,\n    end: 9.66,\n    text: 'This is Prithvi calling from...',\n    emotion: 'angry',\n    speaker: 'SPEAKER 2'\n  }, {\n    id: 5,\n    start: 10.52,\n    end: 11.66,\n    text: 'This is Prithvi calling from...',\n    emotion: 'happy',\n    speaker: 'SPEAKER 2'\n  }],\n  // Call 2 Data\n  [{\n    id: 0,\n    start: 0.0,\n    end: 2.0,\n    text: \"Hello, I'm speaking to Amma.\",\n    emotion: 'angry',\n    speaker: 'SPEAKER 2'\n  }, {\n    id: 1,\n    start: 4.52,\n    end: 8.66,\n    text: 'This is Prithvi calling from...',\n    emotion: 'happy',\n    speaker: 'SPEAKER 2'\n  }], [{\n    id: 0,\n    start: 0.0,\n    end: 2.0,\n    text: \"Hello, I'm speaking to Amma.\",\n    emotion: 'confused',\n    speaker: 'SPEAKER 1'\n  }, {\n    id: 1,\n    start: 5.0,\n    end: 6.0,\n    text: \"Hello, I'm speaking to Amma.\",\n    emotion: 'happy',\n    speaker: 'SPEAKER 1'\n  }, {\n    id: 2,\n    start: 8.9,\n    end: 10.0,\n    text: \"Hello, I'm speaking to Amma.\",\n    emotion: 'angry',\n    speaker: 'SPEAKER 1'\n  }, {\n    id: 3,\n    start: 4.52,\n    end: 8.66,\n    text: 'This is Prithvi calling from...',\n    emotion: 'happy',\n    speaker: 'SPEAKER 2'\n  }, {\n    id: 4,\n    start: 7.52,\n    end: 9.66,\n    text: 'This is Prithvi calling from...',\n    emotion: 'angry',\n    speaker: 'SPEAKER 2'\n  }, {\n    id: 5,\n    start: 10.52,\n    end: 11.66,\n    text: 'This is Prithvi calling from...',\n    emotion: 'confused',\n    speaker: 'SPEAKER 2'\n  }]];\n  const toggleSidebar = () => {\n    setSidebarOpen(!sidebarOpen);\n  };\n\n  // const handleFileChange = (e) => {\n  //     setUploadedFiles([...e.target.files]);\n  // };\n\n  const handleFileChange = e => {\n    setUploadedFiles([...e.target.files]);\n  };\n  const processAnalysisData = data => {\n    return data.map(callSegments => {\n      let speakerData = {};\n      callSegments.forEach(segment => {\n        const speakerKey = segment.speaker;\n        if (!speakerData[speakerKey]) {\n          speakerData[speakerKey] = [];\n        }\n        speakerData[speakerKey].push({\n          time: segment.start,\n          emotion: segment.emotion\n        });\n      });\n      return speakerData;\n    });\n  };\n  const performAnalysis = async () => {\n    setLoading(true);\n    // Replace this with actual uploading logic\n    setTimeout(() => {\n      const processedData = processAnalysisData(yourTestAnalysisData);\n      setCallsData(processedData);\n      setAggregatedMetrics(calculateAggregatedMetrics(processedData));\n      setLoading(false);\n    }, 3000);\n  };\n  const emotionToValue = emotion => {\n    const emotions = {\n      'happy': 1,\n      'angry': 2,\n      'confused': 3,\n      'neutral': 4\n    };\n    return emotions[emotion] || 0;\n  };\n  const handleChangeCall = e => {\n    setSelectedCall(e.target.value);\n  };\n  const createChart = (canvasId, data) => {\n    const ctx = document.getElementById(canvasId).getContext('2d');\n    chartRefs.current[canvasId] = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: data.map(d => `${d.time}`),\n        datasets: [{\n          label: 'Emotion Over Time',\n          data: data.map(d => emotionToValue(d.emotion)),\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1,\n          fill: false\n        }]\n      },\n      options: {\n        scales: {\n          x: {\n            type: 'linear',\n            position: 'bottom'\n          },\n          y: {\n            beginAtZero: true,\n            ticks: {\n              stepSize: 1,\n              callback: function (value) {\n                return Object.keys(emotions).find(key => emotions[key] === value);\n              }\n            }\n          }\n        },\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    });\n  };\n  useEffect(() => {\n    if (selectedCall !== '' && callsData[selectedCall]) {\n      Object.entries(callsData[selectedCall]).forEach(([speaker, data]) => {\n        const canvasId = `canvas${selectedCall}_${speaker}`;\n        createChart(canvasId, data);\n      });\n    }\n  }, [selectedCall, callsData]);\n  const calculateAggregatedMetrics = data => {\n    let totalSatisfaction = 0;\n    let emotionCounts = {};\n    let totalDuration = 0;\n    let duration = 0;\n    let callCount = data.length;\n    data.forEach(call => {\n      Object.values(call).forEach(speaker => {\n        speaker.forEach(segment => {\n          totalSatisfaction += emotionScore(segment.emotion);\n          emotionCounts[segment.emotion] = (emotionCounts[segment.emotion] || 0) + 1;\n        });\n      });\n    });\n    data.forEach(call => {\n      Object.values(call).forEach(speaker => {\n        let duration = 0;\n        speaker.forEach(segment => {\n          if (duration < segment.end) {\n            duration = segment.end;\n          }\n        });\n        totalDuration += duration;\n      });\n    });\n    const mostCommonEmotion = Object.keys(emotionCounts).reduce((a, b) => emotionCounts[a] > emotionCounts[b] ? a : b, \"\");\n    const averageDuration = totalDuration / callCount;\n    const overallSatisfaction = (totalSatisfaction - callCount * -3) / (callCount * 3 - callCount * -3) * 10;\n    setEmotionDistribution(transformEmotionDataForChart(emotionCounts));\n    return {\n      overallCustomerSatisfaction: overallSatisfaction.toFixed(2),\n      mostCommonEmotion: mostCommonEmotion,\n      totalCallsProcessed: callCount,\n      averageCallDuration: averageDuration.toFixed(2)\n    };\n  };\n  const emotionScore = emotion => {\n    const scores = {\n      'happy': 3,\n      'angry': -3,\n      'confused': -1,\n      'neutral': 1\n    };\n    return scores[emotion] || 0;\n  };\n  const transformEmotionDataForChart = emotionCounts => {\n    return {\n      labels: Object.keys(emotionCounts),\n      datasets: [{\n        data: Object.values(emotionCounts),\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0'],\n        hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0']\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(SideBar, {\n      isOpen: sidebarOpen,\n      toggleSidebar: toggleSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex-1 p-10 ${sidebarOpen ? 'ml-64' : 'ml-0'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleSidebar,\n        className: \"text-white absolute top-0 right-0 mt-2 mr-2\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: sidebarOpen ? faTimes : faBars,\n          size: \"lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Analysis Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl mb-3\",\n          children: \"Audio Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          onChange: handleFileChange,\n          className: \"mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: performAnalysis,\n          className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-4\",\n          children: \"Upload and Analyze Audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-0 left-0 w-full h-full bg-gray-800 bg-opacity-50 flex justify-center items-center z-40\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), aggregatedMetrics && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-4 p-4 bg-white rounded shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-3\",\n          children: \"Aggregated Metrics Across All Calls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table-auto w-full mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Overall Customer Satisfaction Score:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: aggregatedMetrics.overallCustomerSatisfaction\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 78\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Most Commonly Predicted Emotion:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: aggregatedMetrics.mostCommonEmotion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 74\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Total Calls Processed:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: aggregatedMetrics.totalCallsProcessed\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 64\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Average Call Duration:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [aggregatedMetrics.averageCallDuration, \" seconds\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 64\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-64 mx-auto\",\n          children: /*#__PURE__*/_jsxDEV(Pie, {\n            data: emotionDistribution\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleChangeCall,\n        className: \"form-select block w-full mt-1 rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Call\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }, this), callsData.map((_, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index,\n          children: [\"Call \", index + 1]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }, this), selectedCall !== '' && Object.entries(callsData[selectedCall]).map(([speaker, data], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-container my-6 p-4 bg-white rounded shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-3\",\n          children: [speaker, \" - Call \", parseInt(selectedCall) + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph w-full h-64\",\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: `canvas${selectedCall}_${speaker}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 9\n  }, this);\n}\n_s(Analysis, \"rSYJW9s2YzBNPM/46N2t67UCFkA=\", false, function () {\n  return [useNavigate];\n});\n_c = Analysis;\nexport default Analysis;\nvar _c;\n$RefreshReg$(_c, \"Analysis\");","map":{"version":3,"names":["React","useRef","useState","useEffect","FontAwesomeIcon","faBars","faTimes","useNavigate","SideBar","axios","Line","Pie","Chart","jsxDEV","_jsxDEV","Analysis","_s","navigate","sidebarOpen","setSidebarOpen","loading","setLoading","uploadedFiles","setUploadedFiles","callsData","setCallsData","selectedCall","setSelectedCall","chartInstances","setChartInstances","aggregatedMetrics","setAggregatedMetrics","emotionDistribution","setEmotionDistribution","chartRefs","emotions","yourTestAnalysisData","id","start","end","text","emotion","speaker","toggleSidebar","handleFileChange","e","target","files","processAnalysisData","data","map","callSegments","speakerData","forEach","segment","speakerKey","push","time","performAnalysis","setTimeout","processedData","calculateAggregatedMetrics","emotionToValue","handleChangeCall","value","createChart","canvasId","ctx","document","getElementById","getContext","current","type","labels","d","datasets","label","borderColor","tension","fill","options","scales","x","position","y","beginAtZero","ticks","stepSize","callback","Object","keys","find","key","responsive","maintainAspectRatio","entries","totalSatisfaction","emotionCounts","totalDuration","duration","callCount","length","call","values","emotionScore","mostCommonEmotion","reduce","a","b","averageDuration","overallSatisfaction","transformEmotionDataForChart","overallCustomerSatisfaction","toFixed","totalCallsProcessed","averageCallDuration","scores","backgroundColor","hoverBackgroundColor","className","children","isOpen","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","size","multiple","onChange","_","index","parseInt","_c","$RefreshReg$"],"sources":["C:/Projects/capstone-project/frontend/src/components/Analysis.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SideBar from './SideBar'; // Import the SideBar component\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto';\r\n\r\nfunction Analysis() {\r\n    const navigate = useNavigate();\r\n    const [sidebarOpen, setSidebarOpen] = useState(true);\r\n    const [loading, setLoading] = useState(false);\r\n    const [uploadedFiles, setUploadedFiles] = useState([]);\r\n    const [callsData, setCallsData] = useState([]);\r\n    const [selectedCall, setSelectedCall] = useState('');\r\n    const [chartInstances, setChartInstances] = useState({});\r\n    const [aggregatedMetrics, setAggregatedMetrics] = useState(null);\r\n    const [emotionDistribution, setEmotionDistribution] = useState({});\r\n    const chartRefs = useRef({});\r\n    const emotions = { 'happy': 1, 'angry': 2, 'confused': 3, 'neutral': 4 };\r\n\r\n    let yourTestAnalysisData = [\r\n        [\r\n            { id: 0, start: 0.0, end: 2.0, text: \"Hello, I'm speaking to Amma.\", emotion: 'happy', speaker: 'SPEAKER 1' },\r\n            { id: 1, start: 5.0, end: 6.0, text: \"Hello, I'm speaking to Amma.\", emotion: 'happy', speaker: 'SPEAKER 1' },\r\n            { id: 2, start: 8.9, end: 10.0, text: \"Hello, I'm speaking to Amma.\", emotion: 'angry', speaker: 'SPEAKER 1' },\r\n            { id: 3, start: 4.52, end: 8.66, text: 'This is Prithvi calling from...', emotion: 'happy', speaker: 'SPEAKER 2' },\r\n            { id: 4, start: 7.52, end: 9.66, text: 'This is Prithvi calling from...', emotion: 'angry', speaker: 'SPEAKER 2' },\r\n            { id: 5, start: 10.52, end: 11.66, text: 'This is Prithvi calling from...', emotion: 'happy', speaker: 'SPEAKER 2' }\r\n        ],\r\n        // Call 2 Data\r\n        [\r\n            { id: 0, start: 0.0, end: 2.0, text: \"Hello, I'm speaking to Amma.\", emotion: 'angry', speaker: 'SPEAKER 2' },\r\n            { id: 1, start: 4.52, end: 8.66, text: 'This is Prithvi calling from...', emotion: 'happy', speaker: 'SPEAKER 2' }\r\n        ],\r\n\r\n        [\r\n            { id: 0, start: 0.0, end: 2.0, text: \"Hello, I'm speaking to Amma.\", emotion: 'confused', speaker: 'SPEAKER 1' },\r\n            { id: 1, start: 5.0, end: 6.0, text: \"Hello, I'm speaking to Amma.\", emotion: 'happy', speaker: 'SPEAKER 1' },\r\n            { id: 2, start: 8.9, end: 10.0, text: \"Hello, I'm speaking to Amma.\", emotion: 'angry', speaker: 'SPEAKER 1' },\r\n            { id: 3, start: 4.52, end: 8.66, text: 'This is Prithvi calling from...', emotion: 'happy', speaker: 'SPEAKER 2' },\r\n            { id: 4, start: 7.52, end: 9.66, text: 'This is Prithvi calling from...', emotion: 'angry', speaker: 'SPEAKER 2' },\r\n            { id: 5, start: 10.52, end: 11.66, text: 'This is Prithvi calling from...', emotion: 'confused', speaker: 'SPEAKER 2' }\r\n        ],\r\n    ];\r\n\r\n    const toggleSidebar = () => {\r\n        setSidebarOpen(!sidebarOpen);\r\n    };\r\n\r\n    // const handleFileChange = (e) => {\r\n    //     setUploadedFiles([...e.target.files]);\r\n    // };\r\n\r\n    const handleFileChange = (e) => {\r\n        setUploadedFiles([...e.target.files]);\r\n    };\r\n\r\n    const processAnalysisData = (data) => {\r\n        return data.map(callSegments => {\r\n            let speakerData = {};\r\n            callSegments.forEach(segment => {\r\n                const speakerKey = segment.speaker;\r\n                if (!speakerData[speakerKey]) {\r\n                    speakerData[speakerKey] = [];\r\n                }\r\n                speakerData[speakerKey].push({\r\n                    time: segment.start,\r\n                    emotion: segment.emotion\r\n                });\r\n            });\r\n            return speakerData;\r\n        });\r\n    };\r\n\r\n    const performAnalysis = async () => {\r\n        setLoading(true);\r\n        // Replace this with actual uploading logic\r\n        setTimeout(() => {\r\n            const processedData = processAnalysisData(yourTestAnalysisData);\r\n            setCallsData(processedData);\r\n            setAggregatedMetrics(calculateAggregatedMetrics(processedData));\r\n            setLoading(false);\r\n        }, 3000);\r\n    };\r\n\r\n    const emotionToValue = (emotion) => {\r\n        const emotions = { 'happy': 1, 'angry': 2, 'confused': 3, 'neutral': 4 };\r\n        return emotions[emotion] || 0;\r\n    };\r\n\r\n    const handleChangeCall = (e) => {\r\n        setSelectedCall(e.target.value);\r\n    };\r\n\r\n    const createChart = (canvasId, data) => {\r\n        const ctx = document.getElementById(canvasId).getContext('2d');\r\n\r\n        chartRefs.current[canvasId] = new Chart(ctx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: data.map(d => `${d.time}`),\r\n                datasets: [{\r\n                    label: 'Emotion Over Time',\r\n                    data: data.map(d => emotionToValue(d.emotion)),\r\n                    borderColor: 'rgb(75, 192, 192)',\r\n                    tension: 0.1,\r\n                    fill: false\r\n                }]\r\n            },\r\n            options: {\r\n                scales: {\r\n                    x: {\r\n                        type: 'linear',\r\n                        position: 'bottom'\r\n                    },\r\n                    y: {\r\n                        beginAtZero: true,\r\n                        ticks: {\r\n                            stepSize: 1,\r\n                            callback: function(value) {\r\n                                return Object.keys(emotions).find(key => emotions[key] === value);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                responsive: true,\r\n                maintainAspectRatio: false\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (selectedCall !== '' && callsData[selectedCall]) {\r\n            Object.entries(callsData[selectedCall]).forEach(([speaker, data]) => {\r\n                const canvasId = `canvas${selectedCall}_${speaker}`;\r\n                createChart(canvasId, data);\r\n            });\r\n        }\r\n    }, [selectedCall, callsData]);\r\n    \r\n\r\n    const calculateAggregatedMetrics = (data) => {\r\n        let totalSatisfaction = 0;\r\n        let emotionCounts = {};\r\n        let totalDuration = 0;\r\n        let duration = 0;\r\n        let callCount = data.length;\r\n\r\n        data.forEach(call => {\r\n            Object.values(call).forEach(speaker => {\r\n                speaker.forEach(segment => {\r\n                    totalSatisfaction += emotionScore(segment.emotion);\r\n                    emotionCounts[segment.emotion] = (emotionCounts[segment.emotion] || 0) + 1;\r\n                });\r\n            });\r\n        });\r\n        data.forEach(call => {\r\n            Object.values(call).forEach(speaker => {\r\n                let duration = 0;\r\n                speaker.forEach(segment => {\r\n                    if (duration < segment.end) {\r\n                        duration = segment.end\r\n                    }\r\n                });\r\n                totalDuration += duration;\r\n            });\r\n        });\r\n\r\n        const mostCommonEmotion = Object.keys(emotionCounts).reduce((a, b) => emotionCounts[a] > emotionCounts[b] ? a : b, \"\");\r\n        const averageDuration = totalDuration / callCount;\r\n        const overallSatisfaction = (totalSatisfaction - callCount * -3) / (callCount * 3 - callCount * -3) * 10;\r\n\r\n        setEmotionDistribution(transformEmotionDataForChart(emotionCounts));\r\n\r\n        return {\r\n            overallCustomerSatisfaction: overallSatisfaction.toFixed(2),\r\n            mostCommonEmotion: mostCommonEmotion,\r\n            totalCallsProcessed: callCount,\r\n            averageCallDuration: averageDuration.toFixed(2)\r\n        };\r\n    };\r\n\r\n    const emotionScore = (emotion) => {\r\n        const scores = { 'happy': 3, 'angry': -3, 'confused': -1, 'neutral': 1 };\r\n        return scores[emotion] || 0;\r\n    };\r\n\r\n    const transformEmotionDataForChart = (emotionCounts) => {\r\n        return {\r\n            labels: Object.keys(emotionCounts),\r\n            datasets: [{\r\n                data: Object.values(emotionCounts),\r\n                backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0'],\r\n                hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0']\r\n            }]\r\n        };\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"container mx-auto p-4\">\r\n            <SideBar isOpen={sidebarOpen} toggleSidebar={toggleSidebar} />\r\n\r\n            <div className={`flex-1 p-10 ${sidebarOpen ? 'ml-64' : 'ml-0'}`}>\r\n                <button onClick={toggleSidebar} className=\"text-white absolute top-0 right-0 mt-2 mr-2\">\r\n                    <FontAwesomeIcon icon={sidebarOpen ? faTimes : faBars} size=\"lg\" />\r\n                </button>\r\n\r\n                <h1 className=\"text-2xl font-bold mb-4\">Analysis Content</h1>\r\n                <div>\r\n                    <h2 className=\"text-xl mb-3\">Audio Upload</h2>\r\n                    <input type=\"file\" multiple onChange={handleFileChange} className=\"mb-4\" />\r\n                    <button onClick={performAnalysis} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-4\">\r\n                        Upload and Analyze Audio\r\n                    </button>\r\n                </div>\r\n\r\n            {loading && (\r\n                <div className=\"absolute top-0 left-0 w-full h-full bg-gray-800 bg-opacity-50 flex justify-center items-center z-40\">\r\n                    <div className=\"loader\">Loading...</div>\r\n                </div>\r\n            )}\r\n\r\n            {aggregatedMetrics && (\r\n                <div className=\"my-4 p-4 bg-white rounded shadow-lg\">\r\n                    <h2 className=\"text-xl font-semibold mb-3\">Aggregated Metrics Across All Calls</h2>\r\n                    <table className=\"table-auto w-full mb-4\">\r\n                        <tbody>\r\n                            <tr><td>Overall Customer Satisfaction Score:</td><td>{aggregatedMetrics.overallCustomerSatisfaction}</td></tr>\r\n                            <tr><td>Most Commonly Predicted Emotion:</td><td>{aggregatedMetrics.mostCommonEmotion}</td></tr>\r\n                            <tr><td>Total Calls Processed:</td><td>{aggregatedMetrics.totalCallsProcessed}</td></tr>\r\n                            <tr><td>Average Call Duration:</td><td>{aggregatedMetrics.averageCallDuration} seconds</td></tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"w-64 mx-auto\">\r\n                        <Pie data={emotionDistribution} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            <select onChange={handleChangeCall} className=\"form-select block w-full mt-1 rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\">\r\n                <option value=\"\">Select a Call</option>\r\n                {callsData.map((_, index) => (\r\n                    <option key={index} value={index}>Call {index + 1}</option>\r\n                ))}\r\n            </select>\r\n\r\n            {/* Graphs for Selected Call */}\r\n            {selectedCall !== '' && Object.entries(callsData[selectedCall]).map(([speaker, data], index) => (\r\n                <div key={index} className=\"graph-container my-6 p-4 bg-white rounded shadow-lg\">\r\n                    <h2 className=\"text-xl font-semibold mb-3\">{speaker} - Call {parseInt(selectedCall) + 1}</h2>\r\n                    <div className=\"graph w-full h-64\">\r\n                        \r\n                        <canvas id={`canvas${selectedCall}_${speaker}`}></canvas>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Analysis;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}