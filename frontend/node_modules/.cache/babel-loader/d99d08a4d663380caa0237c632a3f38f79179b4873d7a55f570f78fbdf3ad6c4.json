{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\capstone-project\\\\frontend\\\\src\\\\components\\\\Analysis.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Analysis() {\n  _s2();\n  var _s = $RefreshSig$();\n  // Sample analysis data\n  useEffect(() => {\n    const processedData = processAnalysisData(analysisData);\n    setCallsData(processedData);\n  }, []);\n  let analysisData = [\n  // Call 1 Data\n  [{\n    id: 0,\n    start: 0.0,\n    end: 2.0,\n    text: \"Hello, I'm speaking to Amma.\",\n    emotion: 'confused',\n    speaker: 'SPEAKER 2'\n  }, {\n    id: 1,\n    start: 4.52,\n    end: 8.66,\n    text: 'This is Prithvi calling from...',\n    emotion: 'happy',\n    speaker: 'SPEAKER 2'\n  }],\n  // Call 2 Data\n  [{\n    id: 0,\n    start: 0.0,\n    end: 2.0,\n    text: \"Hello, I'm speaking to Amma.\",\n    emotion: 'angry',\n    speaker: 'SPEAKER 2'\n  }, {\n    id: 1,\n    start: 4.52,\n    end: 8.66,\n    text: 'This is Prithvi calling from...',\n    emotion: 'neutral',\n    speaker: 'SPEAKER 2'\n  }]];\n  const [callsData, setCallsData] = useState([]);\n  const [selectedCall, setSelectedCall] = useState('');\n  const emotions = {\n    'happy': 1,\n    'angry': 2,\n    'confused': 3,\n    'neutral': 4\n  };\n  useEffect(() => {\n    const processedData = processAnalysisData(analysisData);\n    setCallsData(processedData);\n  }, []);\n  const processAnalysisData = data => {\n    return data.map(callSegments => {\n      let speakerData = {};\n      callSegments.forEach(segment => {\n        if (!speakerData[segment.speaker]) {\n          speakerData[segment.speaker] = [];\n        }\n        speakerData[segment.speaker].push({\n          time: segment.start,\n          emotion: emotionToValue(segment.emotion)\n        });\n      });\n      return speakerData;\n    });\n  };\n  const emotionToValue = emotion => {\n    const emotions = {\n      'happy': 1,\n      'angry': 2,\n      'confused': 3,\n      'neutral': 4\n    };\n    return emotions[emotion] || 0;\n  };\n  const handleChangeCall = e => {\n    setSelectedCall(e.target.value);\n  };\n  const renderGraph = (speakerGraphData, canvasId) => {\n    const ctx = document.getElementById(canvasId).getContext('2d');\n    const chartData = {\n      labels: speakerGraphData.map(d => d.time),\n      datasets: [{\n        label: 'Emotion Over Time',\n        data: speakerGraphData.map(d => d.emotion),\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1,\n        fill: false\n      }]\n    };\n    const chartOptions = {\n      scales: {\n        x: {\n          type: 'linear',\n          position: 'bottom'\n        },\n        y: {\n          beginAtZero: true,\n          ticks: {\n            stepSize: 1,\n            callback: function (value, index, values) {\n              return Object.keys(emotions).find(key => emotions[key] === value);\n            }\n          }\n        }\n      }\n    };\n    new Chart(ctx, {\n      type: 'line',\n      data: chartData,\n      options: chartOptions\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleChangeCall,\n      className: \"mb-4 p-2 border border-gray-300 rounded hover:border-blue-500 transition duration-300\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), callsData.map((_, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: index,\n        children: [\"Call \", index + 1]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), selectedCall !== '' && _s(Object.entries(callsData[selectedCall]).map(_s(([speaker, data], index) => {\n      _s();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: [speaker, \" - Call \", parseInt(selectedCall) + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: `canvas${selectedCall}_${speaker}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), useEffect(() => {\n          renderGraph(data, `canvas${selectedCall}_${speaker}`);\n        }, [selectedCall])]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this);\n    }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")), \"OD7bBpZva5O2jO+Puf00hKivP7c=\")]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_s2(Analysis, \"Y6/iQSwZm2SxdrPeiJCQTcJWbCc=\");\n_c = Analysis;\nexport default Analysis;\nvar _c;\n$RefreshReg$(_c, \"Analysis\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Chart","jsxDEV","_jsxDEV","Analysis","_s2","_s","$RefreshSig$","processedData","processAnalysisData","analysisData","setCallsData","id","start","end","text","emotion","speaker","callsData","selectedCall","setSelectedCall","emotions","data","map","callSegments","speakerData","forEach","segment","push","time","emotionToValue","handleChangeCall","e","target","value","renderGraph","speakerGraphData","canvasId","ctx","document","getElementById","getContext","chartData","labels","d","datasets","label","borderColor","tension","fill","chartOptions","scales","x","type","position","y","beginAtZero","ticks","stepSize","callback","index","values","Object","keys","find","key","options","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_","entries","parseInt","_c","$RefreshReg$"],"sources":["C:/Projects/capstone-project/frontend/src/components/Analysis.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nfunction Analysis() {\r\n    // Sample analysis data\r\n    useEffect(() => {\r\n        const processedData = processAnalysisData(analysisData);\r\n        setCallsData(processedData);\r\n    }, []);\r\n\r\n\r\n    let analysisData = [\r\n        // Call 1 Data\r\n        [\r\n            { id: 0, start: 0.0, end: 2.0, text: \"Hello, I'm speaking to Amma.\", emotion: 'confused', speaker: 'SPEAKER 2' },\r\n            { id: 1, start: 4.52, end: 8.66, text: 'This is Prithvi calling from...', emotion: 'happy', speaker: 'SPEAKER 2' }\r\n        ],\r\n        // Call 2 Data\r\n        [\r\n            { id: 0, start: 0.0, end: 2.0, text: \"Hello, I'm speaking to Amma.\", emotion: 'angry', speaker: 'SPEAKER 2' },\r\n            { id: 1, start: 4.52, end: 8.66, text: 'This is Prithvi calling from...', emotion: 'neutral', speaker: 'SPEAKER 2' }\r\n        ]\r\n    ];\r\n\r\n    const [callsData, setCallsData] = useState([]);\r\n    const [selectedCall, setSelectedCall] = useState('');\r\n    const emotions = { 'happy': 1, 'angry': 2, 'confused': 3, 'neutral': 4 };\r\n\r\n    useEffect(() => {\r\n        const processedData = processAnalysisData(analysisData);\r\n        setCallsData(processedData);\r\n    }, []);\r\n\r\n    const processAnalysisData = (data) => {\r\n        return data.map(callSegments => {\r\n            let speakerData = {};\r\n            callSegments.forEach(segment => {\r\n                if (!speakerData[segment.speaker]) {\r\n                    speakerData[segment.speaker] = [];\r\n                }\r\n                speakerData[segment.speaker].push({\r\n                    time: segment.start,\r\n                    emotion: emotionToValue(segment.emotion)\r\n                });\r\n            });\r\n            return speakerData;\r\n        });\r\n    };\r\n\r\n    const emotionToValue = (emotion) => {\r\n        const emotions = { 'happy': 1, 'angry': 2, 'confused': 3, 'neutral': 4 };\r\n        return emotions[emotion] || 0;\r\n    };\r\n\r\n    const handleChangeCall = (e) => {\r\n        setSelectedCall(e.target.value);\r\n    };\r\n\r\n    const renderGraph = (speakerGraphData, canvasId) => {\r\n        const ctx = document.getElementById(canvasId).getContext('2d');\r\n\r\n        const chartData = {\r\n            labels: speakerGraphData.map(d => d.time),\r\n            datasets: [{\r\n                label: 'Emotion Over Time',\r\n                data: speakerGraphData.map(d => d.emotion),\r\n                borderColor: 'rgb(75, 192, 192)',\r\n                tension: 0.1,\r\n                fill: false\r\n            }]\r\n        };\r\n\r\n        const chartOptions = {\r\n            scales: {\r\n                x: {\r\n                    type: 'linear',\r\n                    position: 'bottom'\r\n                },\r\n                y: {\r\n                    beginAtZero: true,\r\n                    ticks: {\r\n                        stepSize: 1,\r\n                        callback: function(value, index, values) {\r\n                            return Object.keys(emotions).find(key => emotions[key] === value);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        new Chart(ctx, {\r\n            type: 'line',\r\n            data: chartData,\r\n            options: chartOptions\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center p-4\">\r\n            <select \r\n                onChange={handleChangeCall} \r\n                className=\"mb-4 p-2 border border-gray-300 rounded hover:border-blue-500 transition duration-300\"\r\n            >\r\n                <option value=\"\">Select a Call</option>\r\n                {callsData.map((_, index) => (\r\n                    <option key={index} value={index}>Call {index + 1}</option>\r\n                ))}\r\n            </select>\r\n\r\n            {selectedCall !== '' && Object.entries(callsData[selectedCall]).map(([speaker, data], index) => (\r\n                <div key={index} className=\"space-y-8\">\r\n                    <h2 className=\"text-lg font-semibold mb-2\">{speaker} - Call {parseInt(selectedCall) + 1}</h2>\r\n                    <canvas id={`canvas${selectedCall}_${speaker}`}></canvas>\r\n                    {useEffect(() => {\r\n                        renderGraph(data, `canvas${selectedCall}_${speaker}`);\r\n                    }, [selectedCall])}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Analysis;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}