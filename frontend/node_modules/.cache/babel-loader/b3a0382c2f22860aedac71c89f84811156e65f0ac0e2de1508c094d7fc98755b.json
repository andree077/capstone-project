{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\capstone-project\\\\frontend\\\\src\\\\pages\\\\Analysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../components/css/Analysis.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Analysis() {\n  _s();\n  const [emotionsData, setEmotionsData] = useState([]);\n\n  // Mock emotions data for demonstration\n  const mockEmotionsData = [{\n    segment: 1,\n    emotion: 'happy',\n    speaker: 'customer'\n  }, {\n    segment: 2,\n    emotion: 'sad',\n    speaker: 'customer'\n  }, {\n    segment: 3,\n    emotion: 'confused',\n    speaker: 'agent'\n  }, {\n    segment: 4,\n    emotion: 'happy',\n    speaker: 'agent'\n  }];\n  useEffect(() => {\n    // Replace this mock data with the data fetched from the backend\n    setEmotionsData(mockEmotionsData);\n  }, []);\n  if (emotionsData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Separate data for customer and agent\n  const customerData = emotionsData.filter(data => data.speaker === 'customer');\n  const agentData = emotionsData.filter(data => data.speaker === 'agent');\n\n  // Define emotion values\n  const emotionValues = {\n    happy: 3,\n    // Value for happy emotion\n    sad: -3,\n    // Value for sad emotion\n    confused: 0 // Value for confused emotion\n  };\n\n  // Extract emotions for plotting\n  const customerEmotions = customerData.map(data => emotionValues[data.emotion]);\n  const agentEmotions = agentData.map(data => emotionValues[data.emotion]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analysis-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Analysis Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Customer Emotions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line-chart\",\n        children: customerEmotions.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"point\",\n          style: {\n            left: ` ${index * 50}px`,\n            bottom: ` ${value * 10}px `\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Agent Emotions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line-chart\",\n        children: agentEmotions.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"point\",\n          style: {\n            left: `${index * 50}px`,\n            bottom: `${value * 10}px`\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Analysis, \"XwiLyigmF5kkKdEmPbBZczwsnnQ=\");\n_c = Analysis;\nexport default Analysis;\nvar _c;\n$RefreshReg$(_c, \"Analysis\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Analysis","_s","emotionsData","setEmotionsData","mockEmotionsData","segment","emotion","speaker","length","children","fileName","_jsxFileName","lineNumber","columnNumber","customerData","filter","data","agentData","emotionValues","happy","sad","confused","customerEmotions","map","agentEmotions","className","value","index","style","left","bottom","_c","$RefreshReg$"],"sources":["D:/Projects/capstone-project/frontend/src/pages/Analysis.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../components/css/Analysis.css'; // Import your CSS file\r\n\r\nfunction Analysis() {\r\n  const [emotionsData, setEmotionsData] = useState([]);\r\n\r\n  // Mock emotions data for demonstration\r\n  const mockEmotionsData = [\r\n    { segment: 1, emotion: 'happy', speaker: 'customer' },\r\n    { segment: 2, emotion: 'sad', speaker: 'customer' },\r\n    { segment: 3, emotion: 'confused', speaker: 'agent' },\r\n    { segment: 4, emotion: 'happy', speaker: 'agent' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // Replace this mock data with the data fetched from the backend\r\n    setEmotionsData(mockEmotionsData);\r\n  }, []);\r\n\r\n  if (emotionsData.length === 0) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // Separate data for customer and agent\r\n  const customerData = emotionsData.filter((data) => data.speaker === 'customer');\r\n  const agentData = emotionsData.filter((data) => data.speaker === 'agent');\r\n\r\n  // Define emotion values\r\n  const emotionValues = {\r\n    happy: 3, // Value for happy emotion\r\n    sad: -3, // Value for sad emotion\r\n    confused: 0, // Value for confused emotion\r\n  };\r\n\r\n  // Extract emotions for plotting\r\n  const customerEmotions = customerData.map((data) => emotionValues[data.emotion]);\r\n  const agentEmotions = agentData.map((data) => emotionValues[data.emotion]);\r\n\r\n  return (\r\n    <div className=\"analysis-page\">\r\n      <h1>Analysis Page</h1>\r\n      <div className=\"chart\">\r\n        <h2>Customer Emotions</h2>\r\n        <div className=\"line-chart\">\r\n          {customerEmotions.map((value, index) => (\r\n            <div\r\n              className=\"point\"\r\n              key={index}\r\n              style={{ left:` ${index * 50}px`, bottom:` ${value * 10}px `}}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"chart\">\r\n        <h2>Agent Emotions</h2>\r\n        <div className=\"line-chart\">\r\n          {agentEmotions.map((value, index) => (\r\n            <div\r\n              className=\"point\"\r\n              key={index}\r\n              style={{ left: `${index * 50}px`, bottom: `${value * 10}px` }}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Analysis;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}