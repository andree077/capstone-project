{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\capstone-project\\\\frontend\\\\src\\\\components\\\\Analysis.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Analysis() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [loading, setLoading] = useState(false);\n  const [callsData, setCallsData] = useState([]);\n  const [selectedCall, setSelectedCall] = useState('');\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n\n  // Handles changes in the file input\n  const handleFileChange = event => {\n    setUploadedFiles([...event.target.files]);\n  };\n\n  // Handles the upload of audio files\n  const handleUpload = async () => {\n    setLoading(true);\n    const formData = new FormData();\n    uploadedFiles.forEach(file => {\n      formData.append('audioFiles', file);\n    });\n    try {\n      // Replace URL with your backend endpoint\n      const response = await axios.post('http://your-backend-url/upload', formData);\n      const processedData = processAnalysisData(response.data);\n      setCallsData(processedData);\n    } catch (error) {\n      console.error('Upload error:', error);\n    }\n    setLoading(false);\n  };\n\n  // Processes the analysis data received from the backend\n  const processAnalysisData = data => {\n    return data.map(callSegments => {\n      let speakerData = {};\n      callSegments.forEach(segment => {\n        if (!speakerData[segment.speaker]) {\n          speakerData[segment.speaker] = [];\n        }\n        speakerData[segment.speaker].push({\n          time: segment.start,\n          emotion: emotionToValue(segment.emotion)\n        });\n      });\n      return speakerData;\n    });\n  };\n\n  // Converts emotions to numerical values for graph plotting\n  const emotionToValue = emotion => {\n    const emotions = {\n      'happy': 1,\n      'angry': 2,\n      'confused': 3,\n      'neutral': 4\n    };\n    return emotions[emotion] || 0;\n  };\n\n  // Renders the graph for a speaker's data\n  const renderGraph = (speakerGraphData, canvasId) => {\n    const ctx = document.getElementById(canvasId).getContext('2d');\n    const chartData = {\n      labels: speakerGraphData.map(d => d.time),\n      datasets: [{\n        label: 'Emotion Over Time',\n        data: speakerGraphData.map(d => d.emotion),\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1,\n        fill: false\n      }]\n    };\n    const chartOptions = {\n      scales: {\n        x: {\n          type: 'linear',\n          position: 'bottom'\n        },\n        y: {\n          beginAtZero: true,\n          ticks: {\n            stepSize: 1,\n            callback: function (value) {\n              return Object.keys(emotions).find(key => emotions[key] === value);\n            }\n          }\n        }\n      }\n    };\n    new Chart(ctx, {\n      type: 'line',\n      data: chartData,\n      options: chartOptions\n    });\n  };\n\n  // Updates the selected call to display its graphs\n  const handleChangeCall = e => {\n    setSelectedCall(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: handleFileChange,\n      className: \"mb-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-4\",\n      children: \"Upload and Analyze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleChangeCall,\n      className: \"mb-4 p-2 border border-gray-300 rounded hover:border-blue-500 transition duration-300\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), callsData.map((_, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: index,\n        children: [\"Call \", index + 1]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), selectedCall !== '' && _s(Object.entries(callsData[selectedCall]).map(_s(([speaker, data], index) => {\n      _s();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: [speaker, \" - Call \", parseInt(selectedCall) + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: `canvas${selectedCall}_${speaker}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), useEffect(() => {\n          renderGraph(data, `canvas${selectedCall}_${speaker}`);\n        }, [selectedCall])]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this);\n    }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")), \"OD7bBpZva5O2jO+Puf00hKivP7c=\")]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n_s2(Analysis, \"zG3tgg8eBp4tRe1WcluZb3ngIKo=\");\n_c = Analysis;\nexport default Analysis;\nvar _c;\n$RefreshReg$(_c, \"Analysis\");","map":{"version":3,"names":["React","useState","useEffect","axios","Chart","jsxDEV","_jsxDEV","Analysis","_s2","_s","$RefreshSig$","loading","setLoading","callsData","setCallsData","selectedCall","setSelectedCall","uploadedFiles","setUploadedFiles","handleFileChange","event","target","files","handleUpload","formData","FormData","forEach","file","append","response","post","processedData","processAnalysisData","data","error","console","map","callSegments","speakerData","segment","speaker","push","time","start","emotion","emotionToValue","emotions","renderGraph","speakerGraphData","canvasId","ctx","document","getElementById","getContext","chartData","labels","d","datasets","label","borderColor","tension","fill","chartOptions","scales","x","type","position","y","beginAtZero","ticks","stepSize","callback","value","Object","keys","find","key","options","handleChangeCall","e","className","children","multiple","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_","index","entries","parseInt","id","_c","$RefreshReg$"],"sources":["C:/Projects/capstone-project/frontend/src/components/Analysis.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Chart from 'chart.js/auto';\r\n\r\nfunction Analysis() {\r\n    const [loading, setLoading] = useState(false);\r\n    const [callsData, setCallsData] = useState([]);\r\n    const [selectedCall, setSelectedCall] = useState('');\r\n    const [uploadedFiles, setUploadedFiles] = useState([]);\r\n\r\n    // Handles changes in the file input\r\n    const handleFileChange = (event) => {\r\n        setUploadedFiles([...event.target.files]);\r\n    };\r\n\r\n    // Handles the upload of audio files\r\n    const handleUpload = async () => {\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        uploadedFiles.forEach(file => {\r\n            formData.append('audioFiles', file);\r\n        });\r\n\r\n        try {\r\n            // Replace URL with your backend endpoint\r\n            const response = await axios.post('http://your-backend-url/upload', formData);\r\n            const processedData = processAnalysisData(response.data);\r\n            setCallsData(processedData);\r\n        } catch (error) {\r\n            console.error('Upload error:', error);\r\n        }\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    // Processes the analysis data received from the backend\r\n    const processAnalysisData = (data) => {\r\n        return data.map(callSegments => {\r\n            let speakerData = {};\r\n            callSegments.forEach(segment => {\r\n                if (!speakerData[segment.speaker]) {\r\n                    speakerData[segment.speaker] = [];\r\n                }\r\n                speakerData[segment.speaker].push({\r\n                    time: segment.start,\r\n                    emotion: emotionToValue(segment.emotion)\r\n                });\r\n            });\r\n            return speakerData;\r\n        });\r\n    };\r\n\r\n    // Converts emotions to numerical values for graph plotting\r\n    const emotionToValue = (emotion) => {\r\n        const emotions = { 'happy': 1, 'angry': 2, 'confused': 3, 'neutral': 4 };\r\n        return emotions[emotion] || 0;\r\n    };\r\n\r\n    // Renders the graph for a speaker's data\r\n    const renderGraph = (speakerGraphData, canvasId) => {\r\n        const ctx = document.getElementById(canvasId).getContext('2d');\r\n\r\n        const chartData = {\r\n            labels: speakerGraphData.map(d => d.time),\r\n            datasets: [{\r\n                label: 'Emotion Over Time',\r\n                data: speakerGraphData.map(d => d.emotion),\r\n                borderColor: 'rgb(75, 192, 192)',\r\n                tension: 0.1,\r\n                fill: false\r\n            }]\r\n        };\r\n\r\n        const chartOptions = {\r\n            scales: {\r\n                x: {\r\n                    type: 'linear',\r\n                    position: 'bottom'\r\n                },\r\n                y: {\r\n                    beginAtZero: true,\r\n                    ticks: {\r\n                        stepSize: 1,\r\n                        callback: function(value) {\r\n                            return Object.keys(emotions).find(key => emotions[key] === value);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        new Chart(ctx, {\r\n            type: 'line',\r\n            data: chartData,\r\n            options: chartOptions\r\n        });\r\n    };\r\n\r\n    // Updates the selected call to display its graphs\r\n    const handleChangeCall = (e) => {\r\n        setSelectedCall(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center p-4\">\r\n            {/* File Upload Section */}\r\n            <input type=\"file\" multiple onChange={handleFileChange} className=\"mb-4\" />\r\n            <button onClick={handleUpload} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-4\">\r\n                Upload and Analyze\r\n            </button>\r\n\r\n            {/* Loading Screen */}\r\n            {loading && <div className=\"loader\">Loading...</div>}\r\n\r\n            {/* Dropdown for Selecting a Call */}\r\n            <select \r\n                onChange={handleChangeCall} \r\n                className=\"mb-4 p-2 border border-gray-300 rounded hover:border-blue-500 transition duration-300\"\r\n            >\r\n                <option value=\"\">Select a Call</option>\r\n                {callsData.map((_, index) => (\r\n                    <option key={index} value={index}>Call {index + 1}</option>\r\n                ))}\r\n            </select>\r\n\r\n            {/* Display Graphs for Selected Call */}\r\n            {selectedCall !== '' && Object.entries(callsData[selectedCall]).map(([speaker, data], index) => (\r\n                <div key={index} className=\"space-y-8\">\r\n                    <h2 className=\"text-lg font-semibold mb-2\">{speaker} - Call {parseInt(selectedCall) + 1}</h2>\r\n                    <canvas id={`canvas${selectedCall}_${speaker}`}></canvas>\r\n                    {useEffect(() => {\r\n                        renderGraph(data, `canvas${selectedCall}_${speaker}`);\r\n                    }, [selectedCall])}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Analysis;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}