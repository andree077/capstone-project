{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\capstone-project\\\\frontend\\\\src\\\\components\\\\Analysis.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { useNavigate } from 'react-router-dom';\nimport SideBar from './SideBar'; // Import the SideBar component\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Analysis() {\n  _s();\n  const navigate = useNavigate();\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [inputtedAudio, setInputtedAudio] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [employeeData, setEmployeeData] = useState({\n    firstName: ''\n  });\n  const [analysisData, setAnalysisData] = useState([]);\n  const [isAnalysisComplete, setIsAnalysisComplete] = useState(false);\n  let audioFiles = null;\n  const [chartInstance1, setChartInstance1] = useState(null);\n  const [chartInstance2, setChartInstance2] = useState(null);\n\n  // Refs for canvas elements\n  const canvasRef1 = useRef(null);\n  const canvasRef2 = useRef(null);\n  let yourTestAnalysisData = [[{\n    'id': 0,\n    'seek': 0,\n    'start': 0.0,\n    'end': 2.0,\n    'text': \" Hello, I'm speaking to Amma.\",\n    'emotion': 'confused',\n    'tokens': [50364, 2425, 11, 286, 478, 4124, 281, 2012, 1696, 13, 50464],\n    'temperature': 0.0,\n    'avg_logprob': -0.6953301429748535,\n    'compression_ratio': 1.416243654822335,\n    'no_speech_prob': 0.29248109459877014,\n    'speaker': 'SPEAKER 2'\n  }, {\n    'id': 1,\n    'seek': 0,\n    'start': 4.5200000000000005,\n    'end': 8.66,\n    'text': ' This is Prithvi calling from Boston Institute of Analytics at Madhavalli campus.',\n    'emotion': 'happy',\n    'tokens': [50590, 639, 307, 2114, 355, 4917, 5141, 490, 12333, 9446, 295, 25944, 412, 5326, 71, 706, 336, 72, 4828, 13, 50797],\n    'temperature': 0.0,\n    'avg_logprob': -0.6953301429748535,\n    'compression_ratio': 1.416243654822335,\n    'no_speech_prob': 0.29248109459877014,\n    'speaker': 'SPEAKER 2'\n  }], [{\n    'id': 0,\n    'seek': 0,\n    'start': 0.0,\n    'end': 2.0,\n    'text': \" Hello, I'm speaking to Amma.\",\n    'emotion': 'angry',\n    'tokens': [50364, 2425, 11, 286, 478, 4124, 281, 2012, 1696, 13, 50464],\n    'temperature': 0.0,\n    'avg_logprob': -0.6953301429748535,\n    'compression_ratio': 1.416243654822335,\n    'no_speech_prob': 0.29248109459877014,\n    'speaker': 'SPEAKER 2'\n  }, {\n    'id': 1,\n    'seek': 0,\n    'start': 4.5200000000000005,\n    'end': 8.66,\n    'text': ' This is Prithvi calling from Boston Institute of Analytics at Madhavalli campus.',\n    'emotion': 'neutral',\n    'tokens': [50590, 639, 307, 2114, 355, 4917, 5141, 490, 12333, 9446, 295, 25944, 412, 5326, 71, 706, 336, 72, 4828, 13, 50797],\n    'temperature': 0.0,\n    'avg_logprob': -0.6953301429748535,\n    'compression_ratio': 1.416243654822335,\n    'no_speech_prob': 0.29248109459877014,\n    'speaker': 'SPEAKER 2'\n  }]];\n  const toggleSidebar = () => {\n    setSidebarOpen(!sidebarOpen);\n  };\n  const handleEmployeeDataChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEmployeeData({\n      ...employeeData,\n      [name]: value\n    });\n  };\n  function processData(data) {\n    let speaker1Data = [],\n      speaker2Data = [];\n    data.forEach(call => {\n      call.forEach(segment => {\n        if (segment.speaker === 'SPEAKER 1') {\n          speaker1Data.push({\n            time: segment.start,\n            emotion: segment.emotion\n          });\n        } else if (segment.speaker === 'SPEAKER 2') {\n          speaker2Data.push({\n            time: segment.start,\n            emotion: segment.emotion\n          });\n        }\n      });\n    });\n    console.log;\n    return {\n      speaker1Data,\n      speaker2Data\n    };\n  }\n  function prepareGraphData(speakerData) {\n    const labels = speakerData.map(d => `${d.time}`);\n    const data = speakerData.map(d => emotionToValue(d.emotion));\n    return {\n      labels,\n      data\n    };\n  }\n  function emotionToValue(emotion) {\n    switch (emotion) {\n      case 'happy':\n        return 1;\n      case 'angry':\n        return 2;\n      case 'confused':\n        return 3;\n      case 'neutral':\n        return 4;\n      default:\n        return 0;\n    }\n  }\n  const renderGraph = (speakerGraphData, setChartInstance, canvasRef) => {\n    // Check and destroy existing chart instance\n    if (chartInstance1) chartInstance1.destroy();\n    if (chartInstance2) chartInstance2.destroy();\n    const ctx = canvasRef.current.getContext('2d');\n\n    // Convert emotions to numerical values for graph plotting\n    const emotionValues = {\n      'happy': 1,\n      'angry': 2,\n      'confused': 3,\n      'neutral': 4\n    };\n\n    // Chart data and configuration\n    const chartData = {\n      labels: speakerGraphData.map(d => `${d.time}`),\n      datasets: [{\n        label: 'Emotion Over Time',\n        data: speakerGraphData.map(d => emotionValues[d.emotion] || 0),\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1,\n        fill: false\n      }]\n    };\n\n    // Chart options\n    const chartOptions = {\n      scales: {\n        x: {\n          type: 'linear',\n          position: 'bottom'\n        },\n        y: {\n          beginAtZero: true,\n          ticks: {\n            stepSize: 1,\n            callback: function (value, index, values) {\n              return Object.keys(emotionValues).find(key => emotionValues[key] === value);\n            }\n          }\n        }\n      }\n    };\n\n    // Creating a new chart instance\n    const newChartInstance = new Chart(ctx, {\n      type: 'line',\n      data: chartData,\n      options: chartOptions\n    });\n\n    // Update the state with the new chart instance\n    setChartInstance(newChartInstance);\n  };\n  const performAnalysis = async () => {\n    setLoading(true);\n    const success = await sendAudioFilesToBackend();\n    if (success) {\n      // Simulate fetching analysis data\n      // Replace with actual API call to fetch analysis data\n      setTimeout(() => {\n        setAnalysisData(yourTestAnalysisData); // Set your test analysis data here\n        setIsAnalysisComplete(true);\n        setLoading(false);\n      }, 3000);\n    } else {\n      alert('Failed to upload audio files');\n      setLoading(false);\n    }\n  };\n  let speaker1Graph, speaker2Graph;\n  useEffect(() => {\n    if (isAnalysisComplete) {\n      const {\n        speaker1Data,\n        speaker2Data\n      } = processData(analysisData);\n      const speaker1GraphData = prepareGraphData(speaker1Data);\n      const speaker2GraphData = prepareGraphData(speaker2Data);\n      renderGraph(speaker1GraphData, setChartInstance1, canvasRef1);\n      renderGraph(speaker2GraphData, setChartInstance2, canvasRef2);\n    }\n  }, [isAnalysisComplete, analysisData]);\n  const handleAudioFileChange = e => {\n    audioFiles = e.target.files;\n    setInputtedAudio(audioFiles);\n  };\n  const sendAudioFilesToBackend = async () => {\n    const formData = new FormData();\n    for (const file of inputtedAudio) {\n      formData.append('audioFiles', file);\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/upload-audio', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(response);\n      if (response.status === 200) {\n        console.log('Audio files uploaded successfully');\n        return true;\n      } else {\n        console.error('Failed to upload audio files');\n        return false;\n      }\n    } catch (error) {\n      console.error('An error occurred while uploading audio files:', error);\n      return false;\n    }\n  };\n\n  // const handleUploadAudio = async () => {\n  //     setLoading(true);\n  //     const success = await sendAudioFilesToBackend();\n\n  //     if (success) {\n  //         alert('Audio files uploaded and processed');\n  //     } else {\n  //         alert('Failed to upload audio files');\n  //     }\n\n  //     setLoading(false);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex\",\n    children: [/*#__PURE__*/_jsxDEV(SideBar, {\n      isOpen: sidebarOpen,\n      toggleSidebar: toggleSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex-1 p-10 transition-margin duration-300 ease-in-out ${sidebarOpen ? 'ml-64' : 'ml-0'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleSidebar,\n        className: \"text-white absolute top-0 right-0 mt-2 mr-2\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: sidebarOpen ? faTimes : faBars,\n          size: \"lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Analysis Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl mb-3\",\n          children: \"Audio Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"audioFiles\",\n          accept: \".wav, .mp3\",\n          multiple: true,\n          onChange: handleAudioFileChange,\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: performAnalysis,\n          className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n          children: \"Upload and Analyze Audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isAnalysisComplete && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-0 left-0 w-full h-full bg-gray-800 bg-opacity-50 flex justify-center items-center z-40\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 9\n  }, this);\n}\n_s(Analysis, \"HOkw54VVGRsx2VWutj+v1Hy1S5U=\", false, function () {\n  return [useNavigate];\n});\n_c = Analysis;\nexport default Analysis;\nvar _c;\n$RefreshReg$(_c, \"Analysis\");","map":{"version":3,"names":["React","useRef","useState","useEffect","FontAwesomeIcon","faBars","faTimes","useNavigate","SideBar","axios","Line","Chart","jsxDEV","_jsxDEV","Fragment","_Fragment","Analysis","_s","navigate","sidebarOpen","setSidebarOpen","inputtedAudio","setInputtedAudio","loading","setLoading","employeeData","setEmployeeData","firstName","analysisData","setAnalysisData","isAnalysisComplete","setIsAnalysisComplete","audioFiles","chartInstance1","setChartInstance1","chartInstance2","setChartInstance2","canvasRef1","canvasRef2","yourTestAnalysisData","toggleSidebar","handleEmployeeDataChange","e","name","value","target","processData","data","speaker1Data","speaker2Data","forEach","call","segment","speaker","push","time","start","emotion","console","log","prepareGraphData","speakerData","labels","map","d","emotionToValue","renderGraph","speakerGraphData","setChartInstance","canvasRef","destroy","ctx","current","getContext","emotionValues","chartData","datasets","label","borderColor","tension","fill","chartOptions","scales","x","type","position","y","beginAtZero","ticks","stepSize","callback","index","values","Object","keys","find","key","newChartInstance","options","performAnalysis","success","sendAudioFilesToBackend","setTimeout","alert","speaker1Graph","speaker2Graph","speaker1GraphData","speaker2GraphData","handleAudioFileChange","files","formData","FormData","file","append","response","post","headers","status","error","className","children","isOpen","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","size","accept","multiple","onChange","ref","_c","$RefreshReg$"],"sources":["C:/Projects/capstone-project/frontend/src/components/Analysis.js"],"sourcesContent":["import React, { useRef, useState , useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars , faTimes} from '@fortawesome/free-solid-svg-icons';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SideBar from './SideBar'; // Import the SideBar component\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto';\r\n\r\nfunction Analysis() {\r\n    const navigate = useNavigate();\r\n    const [sidebarOpen, setSidebarOpen] = useState(true);\r\n    const [inputtedAudio, setInputtedAudio] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [employeeData, setEmployeeData] = useState({ firstName: '' });\r\n    const [analysisData, setAnalysisData] = useState([]);\r\n    const [isAnalysisComplete, setIsAnalysisComplete] = useState(false);\r\n\r\n    let audioFiles = null;\r\n\r\n    const [chartInstance1, setChartInstance1] = useState(null);\r\n    const [chartInstance2, setChartInstance2] = useState(null);\r\n\r\n    // Refs for canvas elements\r\n    const canvasRef1 = useRef(null);\r\n    const canvasRef2 = useRef(null);\r\n\r\n    let yourTestAnalysisData = [[{'id': 0, 'seek': 0, 'start': 0.0, 'end': 2.0, 'text': \" Hello, I'm speaking to Amma.\", 'emotion' : 'confused', 'tokens': [50364, 2425, 11, 286, 478, 4124, 281, 2012, 1696, 13, 50464], 'temperature': 0.0, 'avg_logprob': -0.6953301429748535, 'compression_ratio': 1.416243654822335, 'no_speech_prob': 0.29248109459877014, 'speaker': 'SPEAKER 2'}, {'id': 1, 'seek': 0, 'start': 4.5200000000000005, 'end': 8.66, 'text': ' This is Prithvi calling from Boston Institute of Analytics at Madhavalli campus.','emotion': 'happy', 'tokens': [50590, 639, 307, 2114, 355, 4917, 5141, 490, 12333, 9446, 295, 25944, 412, 5326, 71, 706, 336, 72, 4828, 13, 50797], 'temperature': 0.0, 'avg_logprob': -0.6953301429748535, 'compression_ratio': 1.416243654822335, 'no_speech_prob': 0.29248109459877014, 'speaker': 'SPEAKER 2'}], [{'id': 0, 'seek': 0, 'start': 0.0, 'end': 2.0, 'text': \" Hello, I'm speaking to Amma.\", 'emotion' : 'angry', 'tokens': [50364, 2425, 11, 286, 478, 4124, 281, 2012, 1696, 13, 50464], 'temperature': 0.0, 'avg_logprob': -0.6953301429748535, 'compression_ratio': 1.416243654822335, 'no_speech_prob': 0.29248109459877014, 'speaker': 'SPEAKER 2'}, {'id': 1, 'seek': 0, 'start': 4.5200000000000005, 'end': 8.66, 'text': ' This is Prithvi calling from Boston Institute of Analytics at Madhavalli campus.', 'emotion' : 'neutral', 'tokens': [50590, 639, 307, 2114, 355, 4917, 5141, 490, 12333, 9446, 295, 25944, 412, 5326, 71, 706, 336, 72, 4828, 13, 50797], 'temperature': 0.0, 'avg_logprob': -0.6953301429748535, 'compression_ratio': 1.416243654822335, 'no_speech_prob': 0.29248109459877014, 'speaker': 'SPEAKER 2'}]]\r\n\r\n    const toggleSidebar = () => {\r\n        setSidebarOpen(!sidebarOpen);\r\n    };\r\n\r\n    const handleEmployeeDataChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setEmployeeData({\r\n            ...employeeData,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    function processData(data) {\r\n        let speaker1Data = [], speaker2Data = [];\r\n\r\n        data.forEach(call => {\r\n            call.forEach(segment => {\r\n                if (segment.speaker === 'SPEAKER 1') {\r\n                    speaker1Data.push({ time: segment.start, emotion: segment.emotion });\r\n                } else if (segment.speaker === 'SPEAKER 2') {\r\n                    speaker2Data.push({ time: segment.start, emotion: segment.emotion });\r\n                }\r\n            });\r\n        });\r\n        console.log\r\n\r\n        return { speaker1Data, speaker2Data };\r\n    }\r\n\r\n    function prepareGraphData(speakerData) {\r\n        const labels = speakerData.map(d => `${d.time}`);\r\n        const data = speakerData.map(d => emotionToValue(d.emotion));\r\n        return { labels, data };\r\n    }\r\n\r\n    function emotionToValue(emotion) {\r\n        switch (emotion) {\r\n            case 'happy': return 1;\r\n            case 'angry': return 2;\r\n            case 'confused': return 3;\r\n            case 'neutral': return 4;\r\n            default: return 0;\r\n        }\r\n    }\r\n\r\n    const renderGraph = (speakerGraphData, setChartInstance, canvasRef) => {\r\n        // Check and destroy existing chart instance\r\n        if (chartInstance1) chartInstance1.destroy();\r\n        if (chartInstance2) chartInstance2.destroy();\r\n\r\n        const ctx = canvasRef.current.getContext('2d');\r\n        \r\n        // Convert emotions to numerical values for graph plotting\r\n        const emotionValues = {\r\n            'happy': 1,\r\n            'angry': 2,\r\n            'confused': 3,\r\n            'neutral': 4\r\n        };\r\n\r\n        // Chart data and configuration\r\n        const chartData = {\r\n            labels: speakerGraphData.map(d => `${d.time}`),\r\n            datasets: [{\r\n                label: 'Emotion Over Time',\r\n                data: speakerGraphData.map(d => emotionValues[d.emotion] || 0),\r\n                borderColor: 'rgb(75, 192, 192)',\r\n                tension: 0.1,\r\n                fill: false\r\n            }]\r\n        };\r\n\r\n        // Chart options\r\n        const chartOptions = {\r\n            scales: {\r\n                x: {\r\n                    type: 'linear',\r\n                    position: 'bottom'\r\n                },\r\n                y: {\r\n                    beginAtZero: true,\r\n                    ticks: {\r\n                        stepSize: 1,\r\n                        callback: function(value, index, values) {\r\n                            return Object.keys(emotionValues).find(key => emotionValues[key] === value);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        // Creating a new chart instance\r\n        const newChartInstance = new Chart(ctx, {\r\n            type: 'line',\r\n            data: chartData,\r\n            options: chartOptions\r\n        });\r\n\r\n        // Update the state with the new chart instance\r\n        setChartInstance(newChartInstance);\r\n    };\r\n\r\n    const performAnalysis = async () => {\r\n        setLoading(true);\r\n        const success = await sendAudioFilesToBackend();\r\n\r\n        if (success) {\r\n            // Simulate fetching analysis data\r\n            // Replace with actual API call to fetch analysis data\r\n            setTimeout(() => {\r\n                setAnalysisData(yourTestAnalysisData); // Set your test analysis data here\r\n                setIsAnalysisComplete(true);\r\n                setLoading(false);\r\n            }, 3000);\r\n        } else {\r\n            alert('Failed to upload audio files');\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    let speaker1Graph, speaker2Graph;\r\n    useEffect(() => {\r\n        if (isAnalysisComplete) {\r\n            const { speaker1Data, speaker2Data } = processData(analysisData);\r\n            const speaker1GraphData = prepareGraphData(speaker1Data);\r\n            const speaker2GraphData = prepareGraphData(speaker2Data);\r\n\r\n            renderGraph(speaker1GraphData, setChartInstance1, canvasRef1);\r\n            renderGraph(speaker2GraphData, setChartInstance2, canvasRef2);\r\n        }\r\n    }, [isAnalysisComplete, analysisData]);\r\n\r\n    const handleAudioFileChange = (e) => {\r\n        audioFiles = e.target.files;\r\n        setInputtedAudio(audioFiles);\r\n    };\r\n\r\n    const sendAudioFilesToBackend = async () => {\r\n        const formData = new FormData();\r\n        for (const file of inputtedAudio) {\r\n            formData.append('audioFiles', file);\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/upload-audio', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            console.log(response);\r\n\r\n            if (response.status === 200) {\r\n                console.log('Audio files uploaded successfully');\r\n                return true;\r\n            } else {\r\n                console.error('Failed to upload audio files');\r\n                return false;\r\n            }\r\n        } catch (error) {\r\n            console.error('An error occurred while uploading audio files:', error);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    // const handleUploadAudio = async () => {\r\n    //     setLoading(true);\r\n    //     const success = await sendAudioFilesToBackend();\r\n\r\n    //     if (success) {\r\n    //         alert('Audio files uploaded and processed');\r\n    //     } else {\r\n    //         alert('Failed to upload audio files');\r\n    //     }\r\n\r\n    //     setLoading(false);\r\n    // };\r\n\r\n    return (\r\n        <div className=\"flex\">\r\n            <SideBar isOpen={sidebarOpen} toggleSidebar={toggleSidebar} />\r\n\r\n            {/* Main content area */}\r\n            <div className={`flex-1 p-10 transition-margin duration-300 ease-in-out ${sidebarOpen ? 'ml-64' : 'ml-0'}`}>\r\n            <button onClick={toggleSidebar} className=\"text-white absolute top-0 right-0 mt-2 mr-2\">\r\n                    <FontAwesomeIcon icon={sidebarOpen ? faTimes : faBars} size=\"lg\" />\r\n            </button>\r\n                {/* Analysis Content */}\r\n                <h1 className=\"text-2xl font-bold mb-4\">Analysis Content</h1>\r\n                <div>\r\n                    <h2 className=\"text-xl mb-3\">Audio Upload</h2>\r\n                    <input\r\n                        type=\"file\"\r\n                        name=\"audioFiles\"\r\n                        accept=\".wav, .mp3\"\r\n                        multiple\r\n                        onChange={handleAudioFileChange}\r\n                        className=\"mb-3\"\r\n                    />\r\n                    <button onClick={performAnalysis} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\r\n                        Upload and Analyze Audio\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                {isAnalysisComplete && (\r\n                <>\r\n                    <canvas ref={canvasRef1}></canvas>\r\n                    <canvas ref={canvasRef2}></canvas>\r\n                </>\r\n                )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Loading Overlay */}\r\n            {loading && (\r\n                <div className=\"absolute top-0 left-0 w-full h-full bg-gray-800 bg-opacity-50 flex justify-center items-center z-40\">\r\n                    <div className=\"loader\">Loading...</div>\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Analysis;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}